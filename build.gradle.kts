/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    kotlin("jvm") version "2.2.0"
    jacoco
}

layout.buildDirectory = file("target")

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation(platform(libs.aws.sdk.kotlin.bom))
    api(libs.aws.sdk.kotlin.s3)
    api(libs.aws.lambda.java.core)
    api(libs.org.jsoup.jsoup)

    implementation(platform(libs.jackson.bom))
    api(libs.jackson.databind)
    api(libs.jackson.dataformat.yaml)
    api(libs.jackson.module.kotlin)
    api(libs.rome)

    implementation(libs.log4j.api)
    implementation(libs.log4j.core)
    runtimeOnly(libs.log4j.slf4j.impl)
    runtimeOnly(libs.aws.lambda.java.log4j2)

    testImplementation(libs.junit.jupiter.api)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(libs.junit.jupiter.platform)
    testRuntimeOnly(libs.log4j.slf4j.impl)
    testImplementation(libs.assertj.core)
}

group = "com.electronicmuse.comicsrss"
version = "1.0.0"
description = "comics-rss"
java.sourceCompatibility = JavaVersion.VERSION_21
java.targetCompatibility = JavaVersion.VERSION_21

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.test {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

val packageZip by tasks.registering(Zip::class) {
    group = "distribution"
    description = "Packages the JAR and runtime dependencies into a zip file"

    // Set the name of the zip archive
    archiveBaseName.set("lambda")
    archiveVersion.set("1.0.0")
    destinationDirectory.set(layout.buildDirectory.dir("distributions"))

    // Include the JAR (assumes 'jar' task exists)
    from(tasks.named("jar")) {
        into("lib")
    }

    // Include runtime dependencies
    from(configurations.runtimeClasspath) {
        into("lib")
    }
}

tasks.build.get().dependsOn(packageZip)
